name: Deploy Trader Server to Alibaba Cloud

on:
  push:
    branches:
      - main  # 监听 main 分支的变动

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 检出代码
    - name: Checkout code
      uses: actions/checkout@v3

    # 设置 Node.js 版本
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # 安装依赖
    - name: Install dependencies
      run: yarn install --frozen-lockfile

    # 创建 .env 文件
    - name: Create env file
      run: |
        cat > .env << 'EOF'
        # 环境变量配置
        NODE_ENV=production
        PORT=3010
        BASE_URL=http://api.ljaym.com
        
        # 数据库
        DB_HOST=localhost
        DB_USER=root
        DB_PASSWORD=Longjia@3713
        DB_NAME=trader_db

        # JWT 配置
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}

        # 七牛云配置
        QINIU_ACCESS_KEY=${{ secrets.QINIU_ACCESS_KEY }}
        QINIU_SECRET_KEY=${{ secrets.QINIU_SECRET_KEY }}
        QINIU_BUCKET=${{ secrets.QINIU_BUCKET }}
        QINIU_DOMAIN=${{ secrets.QINIU_DOMAIN }}

        # CORS 跨域配置
        CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
        EOF

    # 打包文件
    - name: Archive production files
      run: |
        echo "Creating tar archive..."
        tar -czf trader-server.tar.gz \
          app.js \
          ecosystem.config.js \
          package.json \
          yarn.lock \
          .env \
          config/ \
          routes/ \
          middleware/ \
          scripts/
        echo "✔ Archive completed: trader-server.tar.gz"

    # 添加服务器主机密钥，防止 SSH 提示
    - name: Add SSH Host Key
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        echo "✔ SSH host key added."

    # 部署到阿里云
    - name: Deploy to Alibaba Cloud
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        APP_DIR: ${{ secrets.APP_DIR }}
      run: |
        # 保存 SSH 私钥
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key
        scp -i private_key trader-server.tar.gz $SERVER_USER@$SERVER_HOST:$APP_DIR
        ssh -i private_key $SERVER_USER@$SERVER_HOST << EOF
        cd $APP_DIR
        tar --overwrite -xzf trader-server.tar.gz

        # 创建必要的目录
        echo "📁 Creating required directories..."
        mkdir -p logs public/uploads
        chmod 755 public/uploads

        # 安装依赖
        echo "📥 Installing dependencies..."
        yarn install --production

        # 启动应用
        echo "🚀 Starting application..."
        # 确保 PM2 已全局安装
        if ! command -v pm2 &> /dev/null; then
          echo "Installing PM2 globally..."
          npm install -g pm2
        fi
        
        # 使用 reload 代替 delete + start
        if pm2 list | grep -q "trader-server"; then
            echo "Reloading existing application..."
            pm2 reload trader-server
        else
            echo "Starting new application..."
            pm2 start ecosystem.config.js --env production
        fi
        
        pm2 save

        # 清理压缩包
        echo "🗑 Cleaning up temporary files..."
        rm -f trader-server.tar.gz
        echo "✅ Deployment completed successfully!"
        EOF

    # 部署完成通知
    - name: Deployment notification
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "✅ 部署成功！🎉"
        else
          echo "❌ 部署失败！🚨"
        fi